<h1>Real Time Products</h1>
<ul id="product-list">
    {{#each products}}
    <li>
        <h3>{{title}}</h3>
        <p>{{description}}</p>
        <p>Price: ${{price}}</p>
        <p>Stock: {{stock}}</p>
        <p>Code: {{code}}</p>
    </li>
    {{/each}}
</ul>
<br />

<form id="product-form" method="POST">
    <label for="title">Product title:</label>
    <input type="text" id="title" name="title"><br />

    <label for="description">Product description:</label>
    <input type="text" id="description" name="description"><br />

    <label for="price">Product price:</label>
    <input type="number" id="price" name="price"><br />

    <label for="stock">Product stock:</label>
    <input type="number" id="stock" name="stock"><br />

    <label for="code">Product code:</label>
    <input type="text" id="code" name="code"><br />

    <button type="submit">Add Product</button>
</form>
<br />

<form id="delete-form" method="DELETE">
    <label for="id">Product id:</label>
    <input type="number" id="id" name="id"><br />
    <button type="submit">Delete Product</button>
</form>

<br />

<div id="error-message"></div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    
    const productForm = document.getElementById("product-form");
    productForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const title = document.getElementById("title").value;
        const description = document.getElementById("description").value;
        const price = document.getElementById("price").value;
        const stock = document.getElementById("stock").value;
        const code = document.getElementById("code").value;

       
        if (!title || !description || !price || !stock || !code) {
            const errorMessage = document.getElementById("error-message");
            errorMessage.innerHTML = "Please fill in all fields.";
            return;
        }

       
        socket.emit("createProduct", { title, description, price, stock, code });
        productForm.reset();
    });

    // handle form submission for deleting a product
    const deleteForm = document.getElementById("delete-form");
    deleteForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const id = document.getElementById("id").value;
        socket.emit("deleteProduct", id);
        deleteForm.reset();
    });

  // handle receiving product data from server


</script>